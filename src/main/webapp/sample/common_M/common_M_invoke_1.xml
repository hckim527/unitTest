<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare"
	xmlns:xf="http://www.w3.org/2002/xforms">
	<head meta_screenName="[컴포넌트 소개] 텍스트 입력" meta_author="InswaveSystems" meta_type="메인">
		<w2:historyInfo>
			<w2:history meta_no="01" meta_desc="최초작성" meta_date="20220428" meta_user="InswaveSystems"></w2:history>
			<w2:history meta_no="02" meta_desc="미사용 객체 제거 및 화면 구성 변경" meta_date="20240621" meta_user="InswaveSystems" ></w2:history>
		</w2:historyInfo>
		<w2:type>COMPONENT</w2:type>
		<w2:buildDate />
		<w2:MSA />
		<xf:model>
			<w2:dataCollection baseNode="map">
			</w2:dataCollection>
			<w2:workflowCollection />
		</xf:model>
		<w2:layoutInfo />
		<w2:publicInfo method="" />
		<script lazy="false" type="text/javascript"><![CDATA[let objParent = $p.parent();

let pFuncName = "";
let pParam = "";
let pOptions = {};



// 테스트 설명, 유효성 값 설정
scwin.tData = {
    "description" : "[common > M > invoke]<br/>컴포넌트의 모든 자식 컴포넌트에서 특정 메소드를 동일하게 실행합니다.",
    "validation" : [
        "실행하려는 메소드가 정의되어 있는 자식 컴포넌트만 정상적으로 실행되어야 합니다.",
        "funcName(필수) 파라미터로 자식 컴포넌트에서 실행할 메소드의 이름을 문자열로 설정할 수 있어야 합니다.",
        "funcName(필수) 파라미터를 'assert' 로 설정 시 자식 컴포넌트에서 사용자 정의 함수를 실행할 수 있어야 합니다.",
        "funcName(필수) 파라미터로 'assert' 설정 시 메소드 실행 대상이 되는 컴포넌트는 Anchor, AutoComplete, Button, Calendar, DatePicker, Fliptoggle, InputBox, InputCalendar, MultiSelect, Output 으로 제한되어야 합니다.",
        "param(선택) 파라미터로 메소드에 전달할 파라미터를 문자열 또는 사용자 정의 함수로 설정할 수 있어야 합니다.",
        "param(선택) 파라미터에는 파라미터를 한 개만 설정할 수 있어야 합니다.",                
        "funcName(필수) 파라미터가 'assert' 이면 param(선택) 파라미터로 설정한 사용자 정의 함수가 실행되어야 합니다.",
        "funcName(필수) 파라미터가 메소드 이름이면 param(선택) 파라미터로 설정한 값이 메소드의 파라미터로 사용되어야 합니다.",
        "options(선택) 파라미터로 메소드를 실행할 때 적용할 조건을 객체 형태로 설정할 수 있어야 합니다.",
        "options.excludePlugin 파라미터로 메소드 실행에서 제외 할 컴포넌트의 종류를 컴포넌트명(PluginName)으로 설정할 수 있어야 합니다.",        
        "options.excludePlugin 파라미터로 메소드 실행에서 제외 할 컴포넌트의 종류를 공백(' ')을 사용하여 목록 형태로 설정할 수 있어야 합니다.",
        "options.includePlugin 또는 options.includeId 파라미터를 설정하면 options.excludePlugin 파라미터는 적용되지 않아야 합니다.",
        "options.excludeId 파라미터로 메소드 실행에서 제외 할 컴포넌트의 ID 를 설정할 수 있어야 합니다.",
        "options.excludeId 파라미터로 메소드 실행에서 제외 할 컴포넌트의 ID 를 공백(' ')을 사용하여 목록 형태로 설정할 수 있어야 합니다.",
        "options.includePlugin 또는 options.includeId 파라미터를 설정하면 options.excludeId 파라미터는 적용되지 않아야 합니다.",
        "options.includePlugin 파라미터로 메소드 실행 시킬 컴포넌트의 종류를 컴포넌트명(PluginName)으로 설정할 수 있어야 합니다.",
        "options.includePlugin 파라미터로 메소드 실행 시킬 컴포넌트의 종류를 공백(' ')을 사용하여 목록 형태로 설정할 수 있어야 합니다.",
        "options.includeId 파라미터로 메소드 실행 시킬 컴포넌트의 ID 를 설정할 수 있어야 합니다.",
        "options.includeId 파라미터로 메소드 시킬 컴포넌트의 ID 를 공백(' ')을 사용하여 목록 형태로 설정할 수 있어야 합니다.",
        "메소드 실행 결과를 객체 배열로 반환하여야 합니다.",
        "메소드를 실행한 컴포넌트가 없으면 빈 배열이 반환되어야 합니다.",
        "메소드의 실행 결과 중 methodResult 속성은 메소드의 실행 결과를 갖는 객체로써 정상 실행된 컴포넌트당 1 개씩 생성되어야 합니다.",
        "메소드의 실행 결과 중 methodResult.id 속성은 메소드가 실행된 컴포넌트의 Scope ID 값을 가져야 합니다.",
        "메소드의 실행 결과 중 methodResult.org_id 속성은 메소드가 실행된 컴포넌트의 디자인 ID 값을 가져야 합니다.",
        "메소드의 실행 결과 중 methodResult.result 속성은 메소드에서 반환한 값을 가져야 합니다.",
        "사용자 정의 함수가 실행된 경우 해당 컴포넌트의 getValue() 값과 사용자 정의 함수의 반환값이 일치하면 true, 일치하지 않으면 false 값을  가져야 합니다.",
        "자식 컴포넌트가 Group, Switch 이면 해당 컴포넌트의 자식 컴포넌트에서 동일하게 메소드가 실행되어야 합니다.",        
    ]
} 



scwin.onpageload = function () {
    // 테스트 설명, 유효성 생성
    wf_body_left.getObj("scwin").createValidation(scwin.tData);

    // radio 초기값 설정
    par_param_sub.setSelectedIndex(0);
};



// comp 재생성
scwin.comp_init = function () {
    // comp 생성 호출
    objParent.scwin.comp_init();
};



// 사용자 정의 함수
function user_method (obj) {
    wf_body_bottom.getObj("scwin").setReturnValue("=====user method 실행====="); 
    return obj.getValue();   
}



scwin.set_parameter_1 = function () {
    pFuncName = par_funcName.getValue();
};



scwin.set_parameter_2 = function () {
    if(par_param_sub.getText() == "parameter")
        pParam = par_param.getValue();
    else if (par_param_sub.getText() == "user_method")
        pParam = eval('(' + par_param.getValue() + ')');
    else
        pParam = undefined;
};



scwin.par_param_sub_onchange = function (info) {
    if (info.newValue == 0) {
        par_param.setValue("");
        par_param.setDisabled(false);
        par_funcName.setValue("");
        par_funcName.setDisabled(false);       
    }
    else {
        par_param.setValue("user_method");
        par_param.setDisabled(true);
        par_funcName.setValue("assert");
        par_funcName.setDisabled(true);
    }
};



scwin.set_parameter_3 = function () {
    let strOptions = par_options.getValue();

    if (strOptions != "")
        pOptions = eval('(' + strOptions + ')');
    else    
        pOptions = {};
};



scwin.btn_invoke_onclick = function (e) {
    scwin.set_parameter_1();
    scwin.set_parameter_2();
    scwin.set_parameter_3();

    let rtn = '';

    if (pFuncName != "" && pParam != "" && pOptions != {})
        rtn = objParent.target1.invoke(pFuncName, pParam, pOptions);        
    else if (pFuncName != "" && pParam != "")
        rtn = objParent.target1.invoke(pFuncName, pParam);
    else if (pFuncName != "")
        rtn = objParent.target1.invoke(pFuncName);
       
    for (let i = 0; i < rtn.length; i++) {
        wf_body_bottom.getObj("scwin").setReturnValue(rtn[i].id);         
        wf_body_bottom.getObj("scwin").setReturnValue(rtn[i].org_id);         
        wf_body_bottom.getObj("scwin").setReturnValue(rtn[i].result);         
    }
};]]></script>
	</head>
	<body ev:onpageload="scwin.onpageload">
		<xf:group class="tc_body_main" id="" style="display: flex;">
			<xf:group style="" id="body_left" class="tc_body_left">
				<w2:wframe id="wf_body_left" src="/frame/page/body_left.xml" style=""></w2:wframe>
			</xf:group>
			<xf:group class="tc_body_right" id="body_right" style="">
				<w2:wframe id="wf_body_top" src="/frame/page/body_top.xml" style=""></w2:wframe>
				<xf:group id="grp_condition">
				</xf:group>
				<w2:wframe id="wf_body_sample" src="/frame/page/body_sample.xml" style=""></w2:wframe>
				<xf:group id="grp_parameter">
					<xf:group style="" id="grp_etc">
						<xf:group class="tblbox" id="" meta_snippetCategory="05_입출력테이블" meta_snippetKeyComponent="true"
							meta_snippetName="5_01 1단테이블" style="">
							<xf:group adaptive="layout" adaptiveThreshold="600" class="w2tb tbl" id="" style="" tagname="table">
								<w2:attributes>
									<w2:summary></w2:summary>
								</w2:attributes>
								<xf:group tagname="colgroup">
									<xf:group style="width:150px;" tagname="col"></xf:group>
									<xf:group style="" tagname="col"></xf:group>
								</xf:group>
								<xf:group style="" tagname="tr">
									<xf:group class="w2tb_th" style="" tagname="th">
										<w2:textbox class="" id="" label="funcName" ref="" style="" userData2=""></w2:textbox>
									</xf:group>
									<xf:group class="w2tb_td" style="" tagname="td">
										<xf:input id="par_funcName" style="width: 200px;"></xf:input>
									</xf:group>
								</xf:group>
								<xf:group tagname="tr">
									<xf:group class="w2tb_th " tagname="th">
										<w2:attributes>
											<w2:scope>row</w2:scope>
										</w2:attributes>
										<w2:textbox class="" id="" label="param" ref="" style="" userData2=""></w2:textbox>
									</xf:group>
									<xf:group class="w2tb_td" tagname="td">
										<w2:attributes>
											<w2:colspan>1</w2:colspan>
											<w2:rowspan>1</w2:rowspan>
										</w2:attributes>
										<xf:select1 appearance="full" cols="3" ev:onchange="scwin.par_param_sub_onchange" id="par_param_sub" ref=""
											rows="" selectedIndex="" style="width: 280px;height: 35px;">
											<xf:choices>
												<xf:item>
													<xf:label><![CDATA[parameter]]></xf:label>
													<xf:value><![CDATA[0]]></xf:value>
												</xf:item>
												<xf:item>
													<xf:label><![CDATA[user_method]]></xf:label>
													<xf:value><![CDATA[1]]></xf:value>
												</xf:item>
											</xf:choices>
										</xf:select1>
										<xf:input id="par_param" style="width: 200px;"></xf:input>
									</xf:group>
								</xf:group>
								<xf:group style="" tagname="tr">
									<xf:group class="w2tb_th " tagname="th">
										<w2:attributes>
											<w2:scope>row</w2:scope>
										</w2:attributes>
										<w2:textbox class="" id="" label="options" ref="" style="" userData2=""></w2:textbox>
									</xf:group>
									<xf:group class="w2tb_td" tagname="td">
										<w2:attributes>
											<w2:colspan>1</w2:colspan>
											<w2:rowspan>1</w2:rowspan>
										</w2:attributes>
										<xf:textarea id="par_options"
											placeholder='{ excludePlugin : "grid calendar", excludeId : "radio1" } 형태로 options 를 넣어주세요.' style="width:500px;height:150px;">
										</xf:textarea>
									</xf:group>
								</xf:group>
							</xf:group>
						</xf:group>
						<w2:button style="" id="btn_invoke" label="invoke" class="tc_btn_basic" ev:onclick="scwin.btn_invoke_onclick">
						</w2:button>
					</xf:group>
				</xf:group>
				<w2:wframe id="wf_body_bottom" src="/frame/page/body_bottom.xml" style=""></w2:wframe>
			</xf:group>
		</xf:group>
	</body>
</html>