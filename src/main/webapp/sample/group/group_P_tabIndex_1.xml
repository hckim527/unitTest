<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare"
	xmlns:xf="http://www.w3.org/2002/xforms">
	<head meta_screenName="[컴포넌트 소개] 텍스트 입력" meta_author="InswaveSystems" meta_type="메인">
		<w2:historyInfo>
			<w2:history meta_no="01" meta_desc="최초작성" meta_date="20220428" meta_user="InswaveSystems"></w2:history>
			<w2:history meta_no="02" meta_desc="미사용 객체 제거 및 화면 구성 변경" meta_date="20240621" meta_user="InswaveSystems" ></w2:history>
		</w2:historyInfo>
		<w2:type>COMPONENT</w2:type>
		<w2:buildDate />
		<w2:MSA />
		<xf:model>
			<w2:dataCollection baseNode="map">
			</w2:dataCollection>
			<w2:workflowCollection />
		</xf:model>
		<w2:layoutInfo />
		<w2:publicInfo method="" />
		<script lazy="false" type="text/javascript">scwin.gVar = {
    &quot;cTabIndexTarget&quot; : &quot;&quot;,
    &quot;cTabIndexInput&quot; : &quot;&quot;,
    &quot;cTabIndexButton&quot; : &quot;&quot;,
    &quot;cTabIndexSelectBox&quot; : &quot;&quot;,
}



// 테스트 설명, 유효성 값 설정
scwin.tData = {
    &quot;description&quot; : &quot;[group &gt; P &gt; tabIndex]&lt;br/&gt;Tab 키를 사용하여 컴포넌트 간 포커스를 이동할 때 컴포넌트의 순서를 설정합니다.&quot;,
    &quot;validation&quot; : [
        &quot;Tab 키에 의한 포커스 이동 순서를 양수, 0, 음수로 설정할 수 있어야 합니다&quot;,
        &quot;양수로 설정된 컴포넌트 중 작은 숫자의 컴포넌트부터 포커스를 받아야 합니다.&quot;, 
        &quot;0 으로 설정된 컴포넌트는 양수로 설정된 컴포넌트를 모두 순회한 후 포커스가 이동되어야 합니다.&quot;,        
        &quot;음수로 설정된 컴포넌트는 포커스 이동에서 제외되어야 합니다.&quot;,
        &quot;동일한 값을 설정한 경우 소스에 정의된 순서대로 포커스가 이동되어야 합니다 .&quot;,
        &quot;Group 또는 Frame 의 자식 컴포넌트도 동일한 레벨에서 이동 순서가 결정되어야 합니다.&quot;,
    ]
}



scwin.wf_sample_onwframeload = function () {
    let wf_body_left = wf_sample.getObj(&quot;wf_body_left&quot;);
    // 테스트 설명, 유효성 생성
    wf_body_left.getObj(&quot;scwin&quot;).createValidation(scwin.tData);
};



scwin.onpageload = function () {
    $c.gcm.createCommonDatalist();
    
    // comp 초기 생성
    scwin.comp_init();
};



// comp 생성
scwin.comp_init = async function () {
    // comp 렌더링 할 객체 가져오기    
    if (typeof wf_sample !== 'undefined') {
        let wf_body_sample = wf_sample.getObj(&quot;wf_body_sample&quot;);
        grp_comp = wf_body_sample.getObj(&quot;grp_comp&quot;);
    }
    else {        
        grp_comp = wf_body_sample.getObj(&quot;grp_comp&quot;); 
    }

    // 기존 target 있으면 삭제
    if (typeof target1 !== 'undefined') {
        target1.remove();
    }

    // 기존 input2 있으면 삭제
    if (typeof input2 !== 'undefined') {
        input2.remove();
    }

    // 기존 button2 있으면 삭제
    if (typeof button2 !== 'undefined') {
        button2.remove();
    }

    // 기존 selectbox2 있으면 삭제
    if (typeof selectbox2 !== 'undefined') {
        selectbox2.remove();
    }

    // 조건 설정 (target)   
    let properties = {
        tabIndex: scwin.gVar[&quot;cTabIndexTarget&quot;],        
    };

    let cList = $c.gcm.createCList(properties);      

    // 조건 설정 (input)
    let properties_input = {
        tabIndex: scwin.gVar[&quot;cTabIndexInput&quot;],
    };

    let cList_input = $c.gcm.createCList(properties_input);    

    console.log(cList_input);

    // 조건 설정 (button)
    let properties_button = {
        tabIndex: scwin.gVar[&quot;cTabIndexButton&quot;],
    };

    let cList_button = $c.gcm.createCList(properties_button);    

    // 조건 설정 (selectbox)
    let properties_selectbox = {
        tabIndex: scwin.gVar[&quot;cTabIndexSelectBox&quot;],
    };

    let cList_selectbox = $c.gcm.createCList(properties_selectbox);    
          
    let strNameSpace = 'xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xmlns:ev=&quot;http://www.w3.org/2001/xml-events&quot; xmlns:w2=&quot;http://www.inswave.com/websquare&quot; xmlns:xf=&quot;http://www.w3.org/2002/xforms&quot;';    
    let strStartComp = '';
    let strTarget = '';

    strStartComp += '&lt;xf:input ' + strNameSpace + ' tabIndex=&quot;1&quot; initValue=&quot;start&quot; style=&quot;width:144px; height:21px;&quot;&gt;&lt;/xf:input&gt;';

    scwin.startcomp = await $p.dynamicCreate(
        &quot;startcomp&quot;,
        &quot;input&quot;,
        strStartComp,
        grp_comp
    );

    strTarget += '&lt;xf:group ' + strNameSpace + ' ' + cList + ' ev:onfocus=&quot;scwin.target1_onfocus&quot; style=&quot;width:400px; height:300px; background-color:var(--ws-green-500);&quot;&gt;&lt;/xf:group&gt;'

    scwin.target1 = await $p.dynamicCreate(
        &quot;target1&quot;,
        &quot;group&quot;,
        strTarget,
        grp_comp
    );

    $c.gcm.createBasicInput(target1, '', 'ev:onfocus=&quot;scwin.target1_input1_onfocus&quot;', &quot;target1_input1&quot;);
    $c.gcm.createBasicInput(grp_comp, cList_input, 'ev:onfocus=&quot;scwin.input2_onfocus&quot;', &quot;input2&quot;);
    $c.gcm.createBasicButton(grp_comp, cList_button, 'ev:onfocus=&quot;scwin.button2_onfocus&quot;', &quot;button2&quot;);
    $c.gcm.createBasicSelectBox(grp_comp, cList_selectbox, 'ev:onfocus=&quot;scwin.selectbox2_onfocus&quot;', &quot;selectbox2&quot;);
}</script>
	</head>
	<body ev:onpageload="scwin.onpageload">
		<w2:wframe style='' id="wf_sample" src="/sample/common_P/common_P_tabIndex_1.xml" ev:onwframeload="scwin.wf_sample_onwframeload"></w2:wframe>
	</body>
</html>